version: 0.1

# commented configurations may be passed as environment
# variables. Check the Dockerfile for default values.

# auth:
#   htpasswd:
#     realm: basic-realm
#     path: /data/auth/.htpasswd

compatibility:
  schema1:
    # signingkeyfile: /etc/docker-registry/key.json
    enabled: true

health:
  storagedriver:
    enabled: true
    interval: 30s
    threshold: 3

http:
  addr: :5000
  net: tcp
  # prefix: /registry/
  # host: https://your.server.fqdn:5000
  debug:
    addr: localhost:4999
  # secret: such-secure-much-wow
  relativeurls: false
  # tls:
  #   certificate: /data/auth/certificate.crt
  #   key: /data/auth/privatekey.pem
  headers:
    X-Content-Type-Options: [nosniff]
    X-Forwarded-Proto: [https]
    Access-Control-Allow-Origin: ['*']
    Access-Control-Allow-Methods: ['HEAD', 'GET', 'OPTIONS', 'DELETE']
    Access-Control-Allow-Headers: ['Authorization']
    Access-Control-Max-Age: [1728000]
    Access-Control-Allow-Credentials: [true]
    Access-Control-Expose-Headers: ['Docker-Content-Digest']
  http2:
    disabled: false

log:
  accesslog:
    disabled: true
  level: info
  formatter: json
  fields:
    service: registry
    # environment: test

# Uncomment to use this Registry as pull-through cache for DockerHub.
# proxy:
#   remoteurl: https://registry-1.docker.io
#   username:
#   password:

# redis:
#   addr: your.redis.server:6379
#   password: your.redis.pass
#   db: 0
#   dialtimeout: 10ms
#   readtimeout: 10ms
#   writetimeout: 10ms
#   pool:
#     maxidle: 16
#     maxactive: 64
#     idletimeout: 300s

storage:
  cache:
    blobdescriptor: inmemory  # or 'redis'
  delete:
    enabled : true
  filesystem:
    # rootdirectory: /data/storage  # or '/var/lib/docker-registry'
    maxthreads: 200
  maintenance:
    uploadpurging:
      enabled : true
      age: 168h
      interval: 24h
      dryrun: false
    readonly:
      enabled: false
  redirect:
    disable: false
